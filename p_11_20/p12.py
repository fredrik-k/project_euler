'''
PROBLEM 12: 
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

ANSWER : 76576500
'''

import math

def getTriangelNumber(i) :
	s = 0
	return sum(range(1,i + 1))

def findNumberOfDivisors(n) :
	numDivisors = 0
	for i in range(1, int(math.ceil(n ** 0.5))) :
		if n % i == 0 :
			numDivisors += 1
	return numDivisors * 2

def main():
    base = 1
    while True : 
    	triNum = getTriangelNumber(base)
    	if findNumberOfDivisors(triNum) > 500 :
    		print "The first triangle number with more than 500 divisors is", triNum
    		break;
    	base += 1

if __name__ == "__main__":
    main()